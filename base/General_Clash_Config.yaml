### 注意该配置文件仅针对meta内核，参照说明文档https://wiki.metacubex.one/
### 非meta内核请参照对应内核说明修改

########################################################################## 服务端口 ##############################################################################
### 不同客户端的默认端口设置不尽相同，一般也会自行配置，因此不要在配置文件中指定
### 混合端口 HTTP和SOCKS5均可用的端口，一般clash客户端就是让系统代理走这个端口
#mixed-port: 7893

### SOCKS5 代理端口
#socks-port: 7891

### HTTP 代理端口
#port: 7890

### Linux 和 macOS 的 redir 透明代理端口 (如需使用此功能，请取消注释)
#redir-port: 7892

### Linux 和 macOS 的 tproxy 透明代理端口 (如需使用此功能，请取消注释)
#tproxy-port: 7895


########################################################################## 全局配置 ##############################################################################
### 允许局域网的连接（可用来共享代理，放在网关透明代理一定要打开，一般交给客户端决定是否开启，openclash默认开启）
#allow-lan: true

### 绑定自身地址，仅在将allow-lan设置为true时适用，仅允许其他设备通过此指定的IP地址访问共享代理
#bind-address: "*"  # 星号: 绑定宿主网卡所有IP地址，192.168.122.11: 绑定单个IPv4地址，[aaaa::a8aa:ff:fe09:57d8]: 绑定单个IPv6地址

### 允许连接的IP地址段，默认允许全部
#lan-allowed-ips:
  #- 0.0.0.0/0
  #- ::/0

### 禁止链接的IP段，优先级高于允许的白名单，默认为空
#lan-disallowed-ips:
  #- 192.168.0.3/32

### 本地 SOCKS5 / HTTP(S) 服务用户认证
#authentication:
  #- "user1:pass1"

### 允许跳过用户验证的IP
#skip-auth-prefixes:
  #- 127.0.0.1/8
  #- ::1/128

### clash运行模式：规则模式：rule（规则） / global（全局代理）/ direct（全局直连），默认rule
mode: rule

### 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。
log-level: warning  # silent / error / warning / info / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。

### 启用ipv6代理，内核是否接受ipv6流量
ipv6: true

### TCP Keep Alive 间隔，控制 Clash 发出 TCP Keep Alive 包的间隔，减少移动设备耗电问题的临时措施，建议1800+
keep-alive-interval: 1800

### 进程匹配模式，在路由器上关闭，毕竟匹配不到客户端的进程，规则集一般也不带进程规则，特殊情况可以在客户端处打开，可以匹配进程规则
find-process-mode: strict  # openclash中要求此项带引号，但是经过转换后引号会消失openclash里会报错，因此注释掉

### Clash 的 RESTful API，网页控制端地址和端口，由客户端设置
#external-controller: 127.0.0.1:9090

### 外部控制（API）RESTful API 网页控制端的密钥，由客户端设置
#secret: ""

### 缓存设置
profile:
  store-selected: true  # 存储控制面板对策略组的选择
  store-fake-ip: true  # 存储fake-ip映射关系，相当于Cache

### 减去延迟测试的协议握手开销，意义在于让延迟变得好看，没啥卵用
unified-delay: false

### TCP并发
tcp-concurrent: true

### clash流量出站接口，即接口绑定
#interface-name: en0

### Linux下的路由标记，为流量提供标记
#routing-mark: 6666

### 全局客户端指纹，优先低于 proxy 内的 client-fingerprint，目前支持开启 TLS 传输的 TCP/grpc/WS/HTTP , 支持协议有 VLESS,Vmess 和 trojan
global-client-fingerprint: random

### GEOIP数据模式，默认false是mmdb，true是dat，mmdb是更新的版本（实测有设备会不支持mmdb，例如IPQ6000）
geodata-mode: true

### GEO文件加载模式，默认为memconservative（小内存设备模式）
geodata-loader: standard

### GEO自动更新
geo-auto-update: true
geo-update-interval: 24  # 更新间隔，小时
geox-url:  # 下载地址
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  #mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  #asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

### 自定义全局UA，默认为clash.meta
global-ua: clash.meta

### 外部资源下载的 ETag 支持，默认为 true，Etag可用于对比请求资源与本地资源的区别，如果一致则发送304状态码，减轻服务端压力
etag-support: true

############################################################################## DNS设置 ###########################################################################
dns:  # 注意，原版内核分流方式为nameserver+fallback；meta内核则可以直接使用nameserver-policy，请放弃fallback
  enable: true  # 是否启用dns
  prefer-h3: true  # 优先使用HTTP/3，对于支持的DoH DNS能够加速访问
  use-hosts: true  # 使用clash hosts文件
  use-system-hosts: true  # 使用系统 hosts文件
  respect-rules: false  # DNS请求遵循clash规则进行分流，需先配置好 proxy-server-nameserver，否则出现先有鸡先有蛋问题
  listen: 0.0.0.0:7874  # DNS监听端口，非路由器透明代理客户端使用会出现问题
  ipv6: true  # 是否解析ipv6地址，否则返回空结果
  enhanced-mode: redir-host  # DNS处理模式：redir-host/fake-ip，fake-ip速度更快但可能引入问题（部分网页会打不开，需要手动加入filter很麻烦）
  
  ### 对于命中代理规则的域名，将会直接发往远程节点查询；只有未命中/直连的域名，或需解析的IP规则，才会进入下面的DNS查询流程
  proxy-server-nameserver:  # 解析代理节点域名的服务器，如果不指定则会遵循namepolicy，一般节点域名都属于cn，会使用cn服务器，有污染和识别风险
    - https://8.8.8.8/dns-query  # 谷歌主DNS
    - https://1.1.1.1/dns-query  # Cloudflare主DNS
    - https://1.0.0.1/dns-query  # Cloudflare次DNS

  nameserver-policy:  # 指定域名查询的解析服务器，可使用 geosite, 优先于 nameserver/fallback，meta内核的升级功能
    geosite:cn,private,apple:  # 匹配中国，私有地址，苹果域名，优先使用运营商DNS
      - dhcp://wan  # 指定网卡获取的DNS，硬路由的wan口网卡名为wan
      - dhcp://eth1  # 指定网卡获取的DNS，软路由的wan口网卡名为最后一张网卡，双口就是eth1
      - 223.5.5.5  # 阿里主DNS
      - 223.6.6.6  # 阿里副DNS
    geosite:geolocation-!cn:  # 匹配非中国域名，应确保可信无污染且国外加密
      - https://8.8.8.8/dns-query  # 谷歌主DNS
      - https://1.1.1.1/dns-query  # Cloudflare主DNS
      - https://1.0.0.1/dns-query  # Cloudflare次DNS
    geosite:category-ads-all:  # 匹配广告域名，直接返回空结果
      - rcode://success  # 直接返回一个success也就是空结果
  
  nameserver:  # 默认DNS组，留空会被openclash自动添加，域名未命中 nameserver-policy，就会用 nameserver/fallback 同时解析，并根据 fallback-filter 选择结果
    - dhcp://wan  # 指定网卡获取的DNS，硬路由的wan口就叫wan
    - dhcp://eth1  # 指定网卡获取的DNS，软路由的wan口一般是最后一张网卡，对于双口就是eth1
    - 223.5.5.5  # 阿里主DNS
    - 223.6.6.6  # 阿里副DNS
  
  ### Fake-IP设置
  #fake-ip-range: 198.18.0.1/16  # fakeip 下的 IP 段设置，tun 的默认 IPV4 地址 也使用此值作为参考
  #fake-ip-filter-mode: blacklist  # 黑名单/白名单模式，whitelist只有匹配成功才返回 fake-ip
  #fake-ip-filter:  # fakeip过滤，以下域名不会下发 fakeip 而是返回真是IP
    #- geosite:category-ads-all,category-games,cn,private

########################################################################## hosts设置 ###########################################################################
#hosts:
#  '*.clash.dev': 127.0.0.1
#  'alpha.clash.dev': '::1'

########################################################################### 域名嗅探 ###########################################################################
sniffer:  # meta嗅探相关参数，嗅探的作用是：当clash不作为DNS服务器时，仅接收到纯IP连接无法匹配域名规则的问题
  enable: true  # 启用sniffer
  force-dns-mapping: true  # 对redir-host类型识别的流量进行强制嗅探
  parse-pure-ip: true  # 对所有未获取到域名的流量进行强制嗅探
  override-destination: true  # 是否使用嗅探结果作为实际访问，默认为 true
  force-domain:  # 强制嗅探的域名
    - "+.netflix.com"
    - "+.nflxvideo.net"
    - "+.amazonaws.com"
    - "+.media.dssott.com"
  skip-domain:  # 需要跳过嗅探的域名。主要解决部分站点sni字段非域名，导致嗅探结果异常的问题，如米家设备
    - "+.apple.com"
    - Mijia Cloud
    - dlg.io.mi.com
    - "+.oray.com"
    - "+.sunlogin.net"
    - geosite:cn
  sniff:  # 需要嗅探的协议类型，仅支持 HTTP/TLS/QUIC
    TLS:  # TLS协议，不配置默认嗅探443端口
    HTTP:  # HTTP协议
      ports:    # 端口白名单，只针对下列端口嗅探，不配置则全部嗅探
        - 80
        - 8080-8880

########################################################################## TUN设置 #############################################################################
### 一般都都是客户端自行设置，此处设置也不生效，仅做留档
tun:
  enable: true  # 是否启用接口
  stack: mixed  # tun 堆栈模式，如无使用问题，建议使用 mixed：TCP使用system，UDP使用Gvisor
  device:       # 指定TUN网卡名称，此处留空，不同设备不同
  dns-hijack:  # dns 劫持，将匹配到的连接导入内部 dns 模块，不指定UDP或tcp则默认为 udp://
    - any:53
    - tcp://any:53
  strict-route: true  # 严格路由，可以禁止Windows使用多宿主DNS，可以有效防止DNS泄露

#################################################################### 以下内容有些过时 ############################################################################
# 1. clash DNS 请求逻辑：
#   (1) 当访问一个域名时， nameserver 与 fallback 列表内的所有服务器并发请求，得到域名对应的 IP 地址。
#   (2) clash 将选取 nameserver 列表内，解析最快的结果。
#   (3) 若解析结果中，IP 地址属于 国外，那么 clash 将选择 fallback 列表内，解析最快的结果。
#
#   因此，我在 nameserver 和 fallback 内都放置了无污染、解析速度较快的国内 DNS 服务器，以达到最快的解析速度。
#   但是 fallback 列表内服务器会用在解析境外网站，为了结果绝对无污染，我仅保留了支持 DoT/DoH 的两个服务器。
#
# 2. clash DNS 配置注意事项：
#   (1) 如果您为了确保 DNS 解析结果无污染，请仅保留列表内以 tls:// 或 https:// 开头的 DNS 服务器，但是通常对于国内域名没有必要。
#   (2) 如果您不在乎可能解析到污染的结果，更加追求速度。请将 nameserver 列表的服务器插入至 fallback 列表内，并移除重复项。
#
# 3. 关于 DNS over HTTPS (DoH) 和 DNS over TLS (DoT) 的选择：
#   对于两项技术双方各执一词，而且会无休止的争论，各有利弊。各位请根据具体需求自行选择，但是配置文件内默认启用 DoT，因为目前国内没有封锁或管制。
#   DoH: 以 https:// 开头的 DNS 服务器。拥有更好的伪装性，且几乎不可能被运营商或网络管理封锁，但查询效率和安全性可能略低。
#   DoT: 以 tls:// 开头的 DNS 服务器。拥有更高的安全性和查询效率，但端口有可能被管制或封锁。
#   若要了解更多关于 DoH/DoT 相关技术，请自行查阅规范文档。
########################################################################## Rule规则 #############################################################################
### 不推荐在此处添加规则，此处规则会直接排在最终配置文件Rules的最前方，无法控制与外部配置之间的先后顺序优先级
#rules:
#  - DOMAIN-KEYWORD,testHYB,DIRECT
